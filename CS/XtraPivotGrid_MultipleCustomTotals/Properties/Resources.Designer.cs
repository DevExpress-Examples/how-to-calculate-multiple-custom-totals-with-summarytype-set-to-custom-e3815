// Developer Express Code Central Example:
// How to calculate multiple Custom Totals with SummaryType set to Custom
// 
// The following example demonstrates how to calculate and display multiple Custom
// Totals for a field.
// 
// In this example, two Custom Totals are implemented for
// the Category Name field. The first one displays a median calculated against
// summary values, while the second one displays the first and third
// quartiles.
// 
// To accomplish this task, we create two PivotGridCustomTotal
// objects and set their summary type to PivotSummaryType.Custom. We also assign
// the Custom Totals' names to PivotGridCustomTotalBase.Tag properties to be able
// to distinguish between the Custom Totals when we calculate their values.
// Finally, we add the created objects to the Category Name field's
// PivotGridField.CustomTotals collection and enable the Custom Totals to be
// displayed for this field by setting the PivotGridFieldBase.TotalsVisibility
// property to PivotTotalsVisibility.CustomTotals.
// 
// Custom Total values are
// actually calculated in the PivotGridControl.CustomCellValue event. First, the
// event handler prepares a list of summary values against which a Custom Total
// will be calculated. For this purpose, it creates a summary datasource and copies
// the summary values to an array. After that, the array is sorted and passed to an
// appropriate method that calculates a median or quartile value against the
// provided array. Finally, the resulting value is assigned to the event
// parameter's PivotCellValueEventArgs.Value property.
// 
// You can find sample updates and versions for different programming languages here:
// http://www.devexpress.com/example=E3815

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5448
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace XtraPivotGrid_MultipleCustomTotals.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "2.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("XtraPivotGrid_MultipleCustomTotals.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
